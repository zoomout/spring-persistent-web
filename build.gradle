import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage
import com.bmuschko.gradle.docker.tasks.image.Dockerfile

plugins {
    id 'org.springframework.boot' version '2.2.0.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
    id "org.flywaydb.flyway" version "6.0.6"
    id 'com.adarshr.test-logger' version '2.0.0'
    id 'com.bmuschko.docker-remote-api' version '5.2.0'
    id 'jacoco'
}

group = 'com.bogdan.spring-persistent-web'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'
def cache2kVersion = '1.2.4.Final'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation('org.springframework.boot:spring-boot-starter-web') {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
    }
    implementation 'org.springframework.boot:spring-boot-starter-jetty'
    implementation 'org.postgresql:postgresql'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-cache', version: '2.2.0.RELEASE'
    compile group: 'org.ehcache', name: 'ehcache', version: '3.8.1'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'junit', module: 'junit'
    }
    testImplementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.3.1'
    testCompile group: 'org.hamcrest', name: 'hamcrest-junit', version: '2.0.0.0'
}

test {
    useJUnitPlatform()
}

// Integration tests //

sourceSets {
    integration {
        java.srcDir "$projectDir/src/integration/java"
        resources.srcDir "$projectDir/src/integration/resources"
        compileClasspath += main.output + test.output
        runtimeClasspath += main.output + test.output
    }
}

configurations {
    integrationImplementation.extendsFrom testImplementation
    integrationRuntime.extendsFrom testRuntime
}

task integrationTest(type: Test) {
    useJUnitPlatform()
    testClassesDirs = sourceSets.integration.output.classesDirs
    classpath = sourceSets.integration.runtimeClasspath
}

check.dependsOn integrationTest

jacocoTestReport {
    executionData(test, integrationTest)
    reports {
        html.enabled true
        html.destination file("${buildDir}/reports/jacoco")
    }
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(
                    dir: it,
                    exclude: [
                            '**/dto/**',
                            '**/domain/**',
                            '**/validation/ErrorMessages*',
                            '**/PersistentWebApplication*',
                    ]
            )
        }))
    }
}

tasks.build.dependsOn(jacocoTestReport)

// Build docker //

task createDockerfile(type: Dockerfile) {
    from('openjdk:11.0.4-jre-slim')
    copyFile("resources/main/entrypoint.sh", '/app/entrypoint.sh')
    runCommand('chmod +x /app/entrypoint.sh')
    copyFile("libs/spring-persistent-web-${version}.jar", '/app/spring-persistent-web.jar')
    entryPoint('/app/entrypoint.sh')
}

task buildDockerImage(type: DockerBuildImage) {
    dependsOn bootJar
    dependsOn createDockerfile
    inputDir.set(file("${buildDir}"))
    dockerFile.set(file("${buildDir}/docker/Dockerfile"))
    tags.add("zoomout/spring-persistent-web:latest")
}
